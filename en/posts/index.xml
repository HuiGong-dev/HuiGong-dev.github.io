<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Hui Gong</title><link>https://huigong-dev.github.io/en/posts/</link><description>Recent content in Posts on Hui Gong</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 06 Nov 2021 19:48:08 +0100</lastBuildDate><atom:link href="https://huigong-dev.github.io/en/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Grab Homework With Python and Telegram Bot</title><link>https://huigong-dev.github.io/en/posts/grab-your-homework-with-python-and-telegram-bot/</link><pubDate>Sat, 06 Nov 2021 19:48:08 +0100</pubDate><guid>https://huigong-dev.github.io/en/posts/grab-your-homework-with-python-and-telegram-bot/</guid><description>So I&amp;rsquo;m taking a programming paradigms course this semester and the homework will be published every Friday on a webpage. It&amp;rsquo;s kinda boring to check this webpage manually every Friday to grab the homework. Meanwhile, I noticed that the webpage is quite simple and easy to be scraped using python. So&amp;hellip;why not? Spending a few hours to write a small piece of code to grab the homework automatically sounds great.</description></item><item><title>How to build personal blog using GitHub Pages and Hugo</title><link>https://huigong-dev.github.io/en/posts/how-to-build-personal-blog-with-github-pages-and-hugo/</link><pubDate>Tue, 02 Nov 2021 11:00:32 +0100</pubDate><guid>https://huigong-dev.github.io/en/posts/how-to-build-personal-blog-with-github-pages-and-hugo/</guid><description>You want to build a personal blog but don&amp;rsquo;t want to spend too much time building everything from scratch? Me too! After some research I got to know there are several static site generators out there and the most used generators are: Jekyll, Hexo and Hugo. All of them work perfectly with GitHub Pages. I chose Hugo as my site generator, and it worked perfectly.
What is Hugo Hugo is a static site generator written in Go.</description></item></channel></rss>